df=read.csv('./labels.csv')
df=df[grepl('surg',df$abstract),]
df=read.csv('./labels.csv')
df=df[!grepl('Reason for withdrawal from publication',df$abstract),]
dfnsurg=df[!grepl('surg',df$abstract),]
df=df[grepl('surg',df$abstract),]
write.csv(df,'for_manual_screening.csv')
Sys.Date()
setwd("~/Documents/Documents - Emmanuel’s MacBook Pro (2)/GitHub/surg-v-drugs")
knitr::opts_chunk$set(echo = TRUE)
df_incl=read.delim('./review_data/included_studies.csv',sep=',')
getwd()
df_summary=read.delim('./data/review_data/summary_data.csv', sep=',')
df_rct=read.csv('./data/rct_data/journal_rct.csv')
# read summary data csv
df_summary=read.csv('./summary_data.csv')
setwd("~/Documents/Documents - Emmanuel’s MacBook Pro (2)/GitHub/surg-v-drugs/data/review_data")
# read summary data csv
df_summary=read.csv('./summary_data.csv')
df_all=read.csv('./included_studies.csv')
dat_contain=unique(df_summary$X.source..id)
df_all=df_all%>%mutate(Dat=ifelse(X.source..id %in% dat_contain,1,0))
table(df_all$specialty, df_all$Dat)
# Rate of directions stratified for outcome type
## mortality
table(df_summary%>%filter(outcome_type=='mortality')%>%select(direction))
table(df_summary%>%filter(outcome_type=='mortality')%>%select(direction))/12
## composite
table(df_summary%>%filter(outcome_type=='composite')%>%select(direction))
table(df_summary%>%filter(outcome_type=='composite')%>%select(direction))/11
# Same for reanalysis
df_reanal=read.csv('./re_meta_manual.csv')
table(df_reanal$direction_re)
# to check in the table again
View(df_reanal%>%filter(direction_re=='drug'))
## mortality
table(df_reanal%>%filter(outcome_type=='mortality')%>%select(direction_re))
df_corr_au=read.csv('./characteristics_of_reviews.csv')
# Search date
median(df_corr_au$latest_search_date)
IQR(df_corr_au$latest_search_date)
# RCT publication
RCT=df_data[!(duplicated(df_data$IDstudy)),]
# Read extracted data per RCT
df=read.csv('./journal_rct.csv')
setwd("~/Documents/Documents - Emmanuel’s MacBook Pro (2)/GitHub/surg-v-drugs/data/rct_data")
# Read extracted data per RCT
df=read.csv('./journal_rct.csv')
colnames(df)
# CREATES UNIQUE RCT IDs
df$RCT_ID=paste(df$study,df$year.of.study)
# unique RCTs
unique(df$RCT)%>%length()
# removes duplicate RCTs, which is used for journal calculations overall
RCTs=df[!duplicated(df$RCT_ID),]
# shows the distribution of journal focus for unique RCTs
table(RCTs$journal_type)
# this is done to get the no. of comparison for each journal focus
table(df$journal_type)
# Direction of effects based on journal focus for the COMPARISONS
# (this as diffferent reviews use different outcomes)
## MOSTLY SURGICAL
table(df%>%filter(journal_type=='mostly surgical')%>%select(direction))
table(df%>%filter(journal_type=='mostly surgical')%>%select(direction))/133
## GENERAL
table(df%>%filter(journal_type=='general')%>%select(direction))
table(df%>%filter(journal_type=='general')%>%select(direction))/69
## MOSTLY NON-SURGICAL
table(df%>%filter(journal_type=='mostly non-surgical')%>%select(direction))
table(df%>%filter(journal_type=='mostly non-surgical')%>%select(direction))/93
# Fishers' exact test of association of journal type to direction of effects
fisher.test(table(df$journal_type, df$direction))
# Fishers' exact test of association of journal type to direction of effects
# this is the same but using the classifying all with not a mostly surgical focus
# as "other".
temp=df
temp['journal_type'][temp$journal_type!='mostly surgical',]='other'
fisher.test(table(temp$journal_type, temp$direction))
# load the df with the extracted data
df=read.delim('../rct_data/extracted_data.csv', sep=',')
df$INFO=paste(df$X.source..id,df$Outcome,df$surgical_arm,df$medical_arm)
# separate continuous and dichotomous outcomes
dataDichotomous  <- df[is.na(df$mean.surg),]
dataContinuous <- df[is.na(df$event.surg),]
dataContinuous  <- dataContinuous[!(dataContinuous$all.surg  <= 1 |
dataContinuous$all.control  <= 1 |
dataContinuous$SD.surg  == 0 |
dataContinuous$SD.control  == 0),]
dataDichotomous <- dataDichotomous[!(dataDichotomous$all.surg  <= 1 | dataDichotomous$all.control  <= 1),]
# compute effect sizes based on summary statistics
tempEffectCalcContinuous <- with(
dataContinuous,
metafor::escalc(
measure = "SMD",
m2i     = mean.surg,
m1i     = mean.control,
n2i     = all.surg,
n1i     = all.control,
sd2i    = SD.surg,
sd1i    = SD.control
))
tempEffectCalcDichotomous <- with(
dataDichotomous,
metafor::escalc(
measure = "OR",
ai      = event.control,
ci      = event.surg,
n1i     = all.control,
n2i     = all.surg
))
# convert logOR to Cohen's d
tempEffectCalcDichotomous <- data.frame(
yi = tempEffectCalcDichotomous$yi * sqrt(3)/pi,
vi = tempEffectCalcDichotomous$vi * 3/pi^2
)
dataContinuous  <- cbind(dataContinuous,  tempEffectCalcContinuous)
dataDichotomous <- cbind(dataDichotomous, tempEffectCalcDichotomous)
df <- rbind(dataContinuous, dataDichotomous)
# Starting data for downstream TESS calculations
df$d = df$yi # Cohen's d here used for both OR and SMD
df$sed = sqrt(df$vi) # standard error of Cohen's d
df$t=df$d/df$sed # t value
df$Precision=1/df$sed # precision
# filters for comparisons with >1 included study
df_TESS=df%>%dplyr::count(INFO)%>%filter(n>1)
df_TESS_r <- filter(df, df$INFO %in% df_TESS$INFO)
TESS=df_TESS_r%>%
group_split(INFO=factor(INFO))%>%
map_dfr(~.x%>%dplyr::reframe(
# Get baseline information per review comparison
INFO=first(INFO),
title=first(title),
surgical_arm=first(surgical_arm),
medical_arm=first(medical_arm),
Outcome=first(Outcome),
orig_fx_type=first(fx_type),
# number of studies
k=n(),
# heterogeneity statistic
tau=as.numeric(rma(yi=d,sei=sed,data=.x,method="DL")['tau2']),
# get UWLS mean
UWLS = as.numeric(lm(t ~ 0 + Precision)$coefficients),
# get expected Esigtot and observed SStot significant findings
Esigtot=sum(1-pnorm(((1.96*sed-UWLS)/(sed^2+tau)^.5))),
SStot = sum((abs(t)>1.96)*1),
# Excess statistical significance
ESS=(SStot-Esigtot)/k,
# Modified TESS test (not the original chisq)
TESS= (ESS-.05)/(.0475/k)^.5
)
)
TESS%>%filter(TESS>1.645)%>%nrow()
19/53 #(53=df_TESS_r length)
# excess significance over all studies.
Esigtot=sum(TESS$Esigtot) # ~38
Esigott
Esigot
Esigtot
SStot=sum(TESS$SStot) # 99
# df_TESS_r is the outcome data
ESS=(SStot-Esigtot)/df_TESS_r%>%nrow()# ~0.25
TESS_all= (ESS-.05)/(.0475/k)^.5 # 15.6
TESS_all>1.96
egg_prep_cont=dat_cont%>%count(INFO)%>%filter(n>2)
# Egger's regression
# 5/296 have 10 or more studies
# therefore we do for 3 or more studies knowing that power will not be enough!
egg_prep_cat=dat_cat%>%count(INFO)%>%filter(n>2)
df=read.delim('../rct_data/extracted_data.csv', sep=',')
df$INFO=paste(df$X.source..id,df$Outcome,df$surgical_arm,df$medical_arm)
# separate continuous and dichotomous outcomes
dataDichotomous  <- df[is.na(df$mean.surg),]
dataContinuous <- df[is.na(df$event.surg),]
# separate continuous and dichotomous outcomes
dataDichotomous  <- df[is.na(df$mean.surg),]
dataContinuous <- df[is.na(df$event.surg),]
egg_prep_cat=dataDichotomous%>%count(INFO)%>%filter(n>2)
df=read.delim('../rct_data/extracted_data.csv', sep=',')
df$INFO=paste(df$X.source..id,df$Outcome,df$surgical_arm,df$medical_arm)
# separate continuous and dichotomous outcomes
dataDichotomous  <- df[is.na(df$mean.surg),]
dataContinuous <- df[is.na(df$event.surg),]
egg_prep_cat=dataDichotomous%>%count(INFO)%>%filter(n>2)
df
df$INFO
egg_prep_cat=dataDichotomous%>%count(df$INFO)%>%filter(n>2)
egg_prep_cat=dataDichotomous%>%dplyr::count(INFO)%>%filter(n>2)
egg_prep_cont=dataContinuous%>%dplyr::count(INFO)%>%filter(n>2)
egg_cat <- filter(dataDichotomous, dataDichotomous$INFO %in% egg_prep_cat$INFO)
egg_cont <- filter(dataContinuous, dataContinuous$INFO %in% egg_prep_cont$INFO)
cat_egg=egg_cat%>%
group_split(INFO=factor(INFO))%>%
map_dfr(~.x%>%summarise(INFO=first(INFO),
title=first(title),
surgical_arm=first(surgical_arm),
medical_arm=first(medical_arm),
Outcome=first(Outcome),
fx_type=first(fx_type),
EGGer_p=(regtest(yi, vi, data=.x,model="rma")$pval)[1]))
cat_egg=egg_cat%>%
group_split(INFO=factor(INFO))%>%
map_dfr(~.x%>%dplyr::summarise(INFO=first(INFO),
title=first(title),
surgical_arm=first(surgical_arm),
medical_arm=first(medical_arm),
Outcome=first(Outcome),
fx_type=first(fx_type),
EGGer_p=(regtest(yi, vi, data=.x,model="rma")$pval)[1]))
dat_cat=escalc(measure="RR", ai=event.surg, n1i=all.surg, ci=event.control, n2i=all.control, data=dataDichotomous)
dat_cont=escalc(measure="SMD", m1i=mean.surg, sd1i=SD.surg ,n1i=all.surg, m2i=mean.control,sd2i=SD.control, n2i=all.control, data=dataContinuous)
egg_prep_cat=dat_cat%>%dplyr::count(INFO)%>%filter(n>2)
egg_prep_cont=dat_cont%>%dplyr::count(INFO)%>%filter(n>2)
egg_cat <- filter(dat_cat, dat_cat$INFO %in% egg_prep_cat$INFO)
egg_cont <- filter(dat_cont, dat_cont$INFO %in% egg_prep_cont$INFO)
cat_egg=egg_cat%>%
group_split(INFO=factor(INFO))%>%
map_dfr(~.x%>%dplyr::summarise(INFO=first(INFO),
title=first(title),
surgical_arm=first(surgical_arm),
medical_arm=first(medical_arm),
Outcome=first(Outcome),
fx_type=first(fx_type),
EGGer_p=(regtest(yi, vi, data=.x,model="rma")$pval)[1]))
cont_egg=egg_cont%>%
group_split(INFO=factor(INFO))%>%
map_dfr(~.x%>%summarise(INFO=first(INFO),
title=first(title),
surgical_arm=first(surgical_arm),
medical_arm=first(medical_arm),
Outcome=first(Outcome),
fx_type=first(fx_type),
EGGer_p=(regtest(yi, vi, data=.x,model="rma")$pval)[1]))
Egger_test=rbind(cat_egg,cont_egg)
table(Egger_test$EGGer_p<0.05)
write.csv(Egger_test,'./Egger',Sys.Date(),'.csv')
write.csv(Egger_test,'./Egger',as.character(Sys.Date()),'.csv')
write.csv(Egger_test,'./Egger',current_date,'.csv')
current_date
# when writing files run this
current_date=Sys.Date()
write.csv(Egger_test,'./Egger',current_date,'.csv')
current_date
class(current_date)
as.character(current_date)
class(as.character(current_date))
# when writing files run this
current_date=Sys.Date()%>%as.character
write.csv(Egger_test,'./Egger',current_date,'.csv')
current_date
current_date[1]
write.csv(Egger_test,paste0('./Egger',current_date,'.csv'))
TESS%>%write.csv(paste0('TESS',current_date,'.csv'))
write.csv(Egger_test,paste0('../review_data/Egger',current_date,'.csv'))
TESS%>%write.csv(paste0('../review_data/TESS',current_date,'.csv'))
# Read the csv of extracted data:
df=read.delim('../rct_data/extracted_data.csv', sep=',')
# creates a unique comparison identifier column named INFO
df$INFO=paste(df$X.source..id,df$Outcome,df$surgical_arm,df$medical_arm)
# divide the data into a group w/ categoric variables and continuous
## CATEGORIC
df_nonmd<-subset(df, event.surg!="NA")
## CONTINUOUS
df_md=subset(df, mean.surg!="NA")
# Changes the output it is not presented in scientific notation
options(scipen=999)
library(tidyverse)
## CONTINUOUS EFFECT TYPE META-ANALYSIS
cont_ma=df_md%>%
group_split(INFO=factor(INFO))%>%
map_dfr(~.x%>%summarise(INFO=first(INFO),
title=first(title),
surgical_arm=first(surgical_arm),
medical_arm=first(medical_arm),
Outcome=first(Outcome),
fx_type=first(fx_type),
effect=(unlist(summary(metacont(data=.x,
n.e=all.surg,
mean.e=mean.surg,
sd.e=SD.surg,
n.c=all.control,
mean.c=mean.control,
sd.c=SD.control,
sm=first(fx_type),
method.random.ci = "HK"
)
)$random)[1]),
ci.lb=(unlist(summary(metacont(data=.x,
n.e=all.surg,
mean.e=mean.surg,
sd.e=SD.surg,
n.c=all.control,
mean.c=mean.control,
sd.c=SD.control,
sm=first(fx_type),
method.random.ci = "HK"))$random)[3]),
ci.ub=(unlist(summary(metacont(data=.x,
n.e=all.surg,
mean.e=mean.surg,
sd.e=SD.surg,
n.c=all.control,
mean.c=mean.control,
sd.c=SD.control,
sm=first(fx_type),
method.random.ci = "HK"))$random)[4]),
I2=(unlist(summary(metacont(data=.x,
n.e=all.surg,
mean.e=mean.surg,
sd.e=SD.surg,
n.c=all.control,
mean.c=mean.control,
sd.c=SD.control,
sm=first(fx_type),
method.random.ci = "HK")))[['I2']])))
## CATEGORICAL EFFECT TYPE META-ANALYSIS
cat_ma=df_nonmd%>%
group_split(INFO=factor(INFO))%>%
map_dfr(~.x%>%summarise(INFO=first(INFO),
title=first(title),
surgical_arm=first(surgical_arm),
medical_arm=first(medical_arm),
Outcome=first(Outcome),
fx_type=first(fx_type),
effect=exp(unlist(summary(metabin(data=.x,
event.surg,
all.surg,
event.control,
all.control,
method='MH',
method.random.ci = "HK",
sm=first(fx_type)))$random)[1]),
ci.lb=exp(unlist(summary(metabin(data=.x,
event.surg,
all.surg,
event.control,
all.control,
method='MH',
method.random.ci = "HK",
sm=first(fx_type)))$random)[3]),
ci.ub=exp(unlist(summary(metabin(data=.x,
event.surg,
all.surg,
event.control,
all.control,
method='MH',
method.random.ci = "HK",
sm=first(fx_type)))$random)[4]),
I2=(unlist(summary(
metabin(data=.x,
event.surg,
all.surg,
event.control,
all.control,
method='MH',
method.random.ci = "HK",
sm=first(fx_type)))[['I2']]))))
re_ma=rbind(cat_ma,cont_ma)
read.csv('re_meta.csv')
read.csv('re_meta_manual.csv')
setwd("~/Documents/Documents - Emmanuel’s MacBook Pro (2)/GitHub/surg-v-drugs/data/review_data")
read.csv('re_meta_manual.csv')
pr=read.csv('re_meta_manual.csv')
re_ma$effect==pr$effect
pr=read.csv('re_meta_manual.csv')%>%arrange(X.source..id)
pr=pr%>%arrange(X.source..id)
pr=pr%>%arrange(INFO)
re_ma=re_ma%>%arrange(INFO)
re_ma$effect==pr$effect
re_ma%>%arrange(INFO)
pr
re_ma$effect==pr$effect
identical(re_ma[['effect']],pr[['effect']])
re_ma
pr
df_reanal=re_ma
## mortality
table(df_reanal%>%filter(outcome_type=='mortality')%>%select(direction_re))
re_ma%>%filter(INFO=='CD003243.PUB3 GORD_specific quality of life (<1 y) Laparoscopic fundoplication Protein pump inhibitors')
re_ma%>%filter(INFO=='CD003435.PUB2 Death at the end of follow-up Surgical decompression Osmotic agents, blood pressure control, and glucose control')
random
random()
re_ma%>%filter(INFO=='CD006499.PUB4 improved ocular alignment  10 PD children Surgical correction Botulinum toxin')
# load the df with the extracted data
df=read.delim('../rct_data/extracted_data.csv', sep=',')
df$INFO=paste(df$X.source..id,df$Outcome,df$surgical_arm,df$medical_arm)
# when writing files run this
current_date=Sys.Date()%>%as.character
# separate continuous and dichotomous outcomes
dataDichotomous  <- df[is.na(df$mean.surg),]
dataContinuous <- df[is.na(df$event.surg),]
dataContinuous  <- dataContinuous[!(dataContinuous$all.surg  <= 1 |
dataContinuous$all.control  <= 1 |
dataContinuous$SD.surg  == 0 |
dataContinuous$SD.control  == 0),]
dataDichotomous <- dataDichotomous[!(dataDichotomous$all.surg  <= 1 | dataDichotomous$all.control  <= 1),]
# compute effect sizes based on summary statistics
tempEffectCalcContinuous <- with(
dataContinuous,
metafor::escalc(
measure = "SMD",
m2i     = mean.surg,
m1i     = mean.control,
n2i     = all.surg,
n1i     = all.control,
sd2i    = SD.surg,
sd1i    = SD.control
))
tempEffectCalcDichotomous <- with(
dataDichotomous,
metafor::escalc(
measure = "OR",
ai      = event.control,
ci      = event.surg,
n1i     = all.control,
n2i     = all.surg
))
# convert logOR to Cohen's d
tempEffectCalcDichotomous <- data.frame(
yi = tempEffectCalcDichotomous$yi * sqrt(3)/pi,
vi = tempEffectCalcDichotomous$vi * 3/pi^2
)
dataContinuous  <- cbind(dataContinuous,  tempEffectCalcContinuous)
dataDichotomous <- cbind(dataDichotomous, tempEffectCalcDichotomous)
df <- rbind(dataContinuous, dataDichotomous)
# Starting data for downstream TESS calculations
df$d = df$yi # Cohen's d here used for both OR and SMD
df$sed = sqrt(df$vi) # standard error of Cohen's d
df$t=df$d/df$sed # t value
df$Precision=1/df$sed # precision
# filters for comparisons with >1 included study
df_TESS=df%>%dplyr::count(INFO)%>%filter(n>1)
library(dplyr)
library(metafor)
# filters for comparisons with >1 included study
df_TESS=df%>%dplyr::count(INFO)%>%filter(n>1)
df_TESS_r <- filter(df, df$INFO %in% df_TESS$INFO)
TESS=df_TESS_r%>%
group_split(INFO=factor(INFO))%>%
map_dfr(~.x%>%dplyr::reframe(
# Get baseline information per review comparison
INFO=first(INFO),
title=first(title),
surgical_arm=first(surgical_arm),
medical_arm=first(medical_arm),
Outcome=first(Outcome),
orig_fx_type=first(fx_type),
# number of studies
k=n(),
# heterogeneity statistic
tau=as.numeric(rma(yi=d,sei=sed,data=.x,method="DL")['tau2']),
# get UWLS mean
UWLS = as.numeric(lm(t ~ 0 + Precision)$coefficients),
# get expected Esigtot and observed SStot significant findings
Esigtot=sum(1-pnorm(((1.96*sed-UWLS)/(sed^2+tau)^.5))),
SStot = sum((abs(t)>1.96)*1),
# Excess statistical significance
ESS=(SStot-Esigtot)/k,
# Modified TESS test (not the original chisq)
TESS= (ESS-.05)/(.0475/k)^.5
)
)
library(tidyverse)
TESS=df_TESS_r%>%
group_split(INFO=factor(INFO))%>%
map_dfr(~.x%>%dplyr::reframe(
# Get baseline information per review comparison
INFO=first(INFO),
title=first(title),
surgical_arm=first(surgical_arm),
medical_arm=first(medical_arm),
Outcome=first(Outcome),
orig_fx_type=first(fx_type),
# number of studies
k=n(),
# heterogeneity statistic
tau=as.numeric(rma(yi=d,sei=sed,data=.x,method="DL")['tau2']),
# get UWLS mean
UWLS = as.numeric(lm(t ~ 0 + Precision)$coefficients),
# get expected Esigtot and observed SStot significant findings
Esigtot=sum(1-pnorm(((1.96*sed-UWLS)/(sed^2+tau)^.5))),
SStot = sum((abs(t)>1.96)*1),
# Excess statistical significance
ESS=(SStot-Esigtot)/k,
# Modified TESS test (not the original chisq)
TESS= (ESS-.05)/(.0475/k)^.5
)
)
abs(df$t)
abs(df$t)>1.96*1
(abs(df$t)>1.96)*1
sum((abs(df_TESS_r$t)>1.96)*1)
sum((abs(df_TESS_r$t)>1.96)*1)
df_TESS_r%>%distinct(RCT_ID)
df_TESS_r%>%distinct(paste(study,year.of.study))
df_TESS_r%>%distinct(paste(study,year.of.study,Outcome))
x=df_TESS_r%>%distinct(paste(study,year.of.study,Outcome))
245-227
sum((abs(x$t)>1.96)*1)
x=df_TESS_r%>%distinct(paste(study,year.of.study,Outcome),.keep_all=T)
sum((abs(x$t)>1.96)*1)
ESS=(38-93)/227
k=245
TESS_all= (ESS-.05)/(.0475/k)^.5 # 15.6
ESS=(93-28)/227
k=245
TESS_all= (ESS-.05)/(.0475/k)^.5 # 15.6
# excess significance over all studies.
Esigtot=sum(TESS$Esigtot) # ~38
SStot=sum(TESS$SStot) # 99
ESS=(SStot-Esigtot)/df_TESS_r%>%nrow()# ~0.25
k=245
TESS_all= (ESS-.05)/(.0475/k)^.5 # 15.6
TESS_all>1.96
